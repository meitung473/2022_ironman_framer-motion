{"version":3,"file":"static/js/961.a8d7e1d6.chunk.js","mappings":"oOAGMA,EAAY,CAAC,QAAS,QAAS,cAE/BC,EAAe,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpB,GAA8BC,EAAAA,EAAAA,UAASH,EAAU,IAAjD,eAAOI,EAAP,KAAgBC,EAAhB,KACA,OACI,eAAIC,UAAU,SAAd,SACKN,EAAUO,KAAI,SAACC,EAAMC,GAAP,OACX,gBAEIH,UAAU,cACVI,QAAS,SAACC,GAAD,OAAON,EAAWG,EAAlB,EAHb,UAKKA,EACAN,GACG,8BACKM,IAASJ,IACN,SAAC,SAAD,CACIE,UAAU,YACVM,SAAS,iBAKrB,8BACKJ,IAASJ,IACN,SAAC,SAAD,CAAaE,UAAU,kBAjB9BE,EAFE,KA2B1B,EChCD,IAmBA,EAnBmB,CASf,CACIK,KAAM,SACNC,UDuBO,WACX,OACI,4BACI,sEACA,4BACI,6CACA,SAACb,EAAD,KACA,6CACA,SAAC,IAAD,CAAac,GAAG,SAAhB,UACI,SAACd,EAAD,CAAcC,WAAS,UAI/B,4BACI,mDACA,UAAC,IAAD,CAAaa,GAAG,WAAhB,WACI,SAACd,EAAD,CAAcC,WAAS,KACvB,SAACD,EAAD,CAAcC,WAAS,YAK1C,G,8FEvDKc,GAA+BC,EAAAA,EAAAA,eAAc,M,SCL7CC,EAAS,SAACC,GAAD,OAAWA,EAAKC,eAAiBD,EAAKE,YAAW,EAAjD,EACf,SAASC,IACL,IAAMC,EAAQ,IAAIC,IACZC,EAAgB,IAAIC,QACpBC,EAAW,kBAAMJ,EAAMK,QAAQV,EAApB,EACjB,MAAO,CACHW,IAAK,SAACV,GACFI,EAAMM,IAAIV,GACVM,EAAcK,IAAIX,EAAMA,EAAKY,iBAAiB,aAAcJ,GAC/D,EACDK,OAAQ,SAACb,GACL,IAAIc,EACJV,EAAMW,OAAOf,GACsB,QAAlCc,EAAKR,EAAcU,IAAIhB,UAA0B,IAAPc,GAAyBA,IACpER,EAAcS,OAAOf,GACrBQ,GACH,EACDS,MAAOT,EAEd,CCZD,IAAMU,EAAqB,SAACC,GAAD,OAAyB,IAAZA,CAAb,EAErBC,EAAc,SAAC,GAAgD,IAA9CC,EAA8C,EAA9CA,SAAUzB,EAAoC,EAApCA,GAAI0B,EAAgC,EAAhCA,UAAgC,IAArBH,QAAAA,OAAqB,cAE/CI,IAAdD,IACAH,EAAUG,GACd,IAAME,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAChCC,GAA+BF,EAAAA,EAAAA,YAAW5B,GAChD,GAA2B+B,EAAAA,EAAAA,KAA3B,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,EAAaT,EAAmB5B,IAAM+B,EACpB,OAApBI,EAAQG,UAVQ,SAACf,GAAD,OAAaD,GAA+B,IAAZC,IAAiC,OAAZA,CAArD,CAWZgB,CAAgBhB,IAAYc,IAC5BrC,EAAKA,EAAKqC,EAAa,IAAMrC,EAAKqC,GAEtCF,EAAQG,QAAU,CACdtC,GAAAA,EACAwC,MAAOlB,EAAmBC,IACpBK,EAAmBY,OACnBjC,MAGd,IAAMkC,GAAkBC,EAAAA,EAAAA,UAAQ,0BAAC,UAAWP,EAAQG,SAApB,IAA6BL,YAAAA,GAA7B,GAA6C,CAACC,IAC9E,OAAQS,EAAAA,cAAoBb,EAAAA,EAAAA,SAA6B,CAAEc,MAAOH,GAAmBhB,EACxF,C","sources":["components/Day7/NavbarLayoutId.js","components/Day7/index.js","../node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/group.mjs","../node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs"],"sourcesContent":["import { LayoutGroup, motion } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nconst listItems = [\"About\", \"Price\", \"Contact Us\"];\r\n\r\nconst SingleNavbar = ({ haslayout }) => {\r\n    const [section, setSection] = useState(listItems[0]);\r\n    return (\r\n        <ul className=\"navbar\">\r\n            {listItems.map((item, i) => (\r\n                <li\r\n                    key={item}\r\n                    className=\"navbar-item\"\r\n                    onClick={(e) => setSection(item)}\r\n                >\r\n                    {item}\r\n                    {haslayout ? (\r\n                        <>\r\n                            {item === section && (\r\n                                <motion.span\r\n                                    className=\"indicator\"\r\n                                    layoutId=\"indicator\"\r\n                                />\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {item === section && (\r\n                                <motion.span className=\"indicator\" />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div>\r\n            <h3>有無 layoutId 的差別</h3>\r\n            <div>\r\n                <h4>沒 layoutId</h4>\r\n                <SingleNavbar />\r\n                <h4>有 layoutId</h4>\r\n                <LayoutGroup id=\"single\">\r\n                    <SingleNavbar haslayout />\r\n                </LayoutGroup>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>layoutId 衝突</h3>\r\n                <LayoutGroup id=\"conflict\">\r\n                    <SingleNavbar haslayout />\r\n                    <SingleNavbar haslayout />\r\n                </LayoutGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import LayoutType from \"./LayoutType\";\r\nimport MutilpleLayout from \"./MutilpleLayout\";\r\nimport Navbar from \"./NavbarLayoutId\";\r\nimport NavbarPillLayoutId from \"./NavbarPillLayoutId\";\r\nconst animations = [\r\n    // {\r\n    //     name: \"layout 種類\",\r\n    //     component: LayoutType,\r\n    // },\r\n    // {\r\n    //     name: \"多個 layout 分組\",\r\n    //     component: MutilpleLayout,\r\n    // },\r\n    {\r\n        name: \"Navbar\",\r\n        component: Navbar,\r\n    },\r\n    // {\r\n    //     name: \"\",\r\n    //     component: NavbarPillLayoutId,\r\n    // },\r\n];\r\n\r\nexport default animations;\r\n","import { createContext } from 'react';\n\n/**\n * @deprecated\n */\nconst DeprecatedLayoutGroupContext = createContext(null);\n\nexport { DeprecatedLayoutGroupContext };\n","const notify = (node) => !node.isLayoutDirty && node.willUpdate(false);\nfunction nodeGroup() {\n    const nodes = new Set();\n    const subscriptions = new WeakMap();\n    const dirtyAll = () => nodes.forEach(notify);\n    return {\n        add: (node) => {\n            nodes.add(node);\n            subscriptions.set(node, node.addEventListener(\"willUpdate\", dirtyAll));\n        },\n        remove: (node) => {\n            var _a;\n            nodes.delete(node);\n            (_a = subscriptions.get(node)) === null || _a === void 0 ? void 0 : _a();\n            subscriptions.delete(node);\n            dirtyAll();\n        },\n        dirty: dirtyAll,\n    };\n}\n\nexport { nodeGroup };\n","import * as React from 'react';\nimport { useContext, useRef, useMemo } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { DeprecatedLayoutGroupContext } from '../../context/DeprecatedLayoutGroupContext.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { nodeGroup } from '../../projection/node/group.mjs';\n\nconst shouldInheritGroup = (inherit) => inherit === true;\nconst shouldInheritId = (inherit) => shouldInheritGroup(inherit === true) || inherit === \"id\";\nconst LayoutGroup = ({ children, id, inheritId, inherit = true }) => {\n    // Maintain backwards-compatibility with inheritId until 7.0\n    if (inheritId !== undefined)\n        inherit = inheritId;\n    const layoutGroupContext = useContext(LayoutGroupContext);\n    const deprecatedLayoutGroupContext = useContext(DeprecatedLayoutGroupContext);\n    const [forceRender, key] = useForceUpdate();\n    const context = useRef(null);\n    const upstreamId = layoutGroupContext.id || deprecatedLayoutGroupContext;\n    if (context.current === null) {\n        if (shouldInheritId(inherit) && upstreamId) {\n            id = id ? upstreamId + \"-\" + id : upstreamId;\n        }\n        context.current = {\n            id,\n            group: shouldInheritGroup(inherit)\n                ? layoutGroupContext.group || nodeGroup()\n                : nodeGroup(),\n        };\n    }\n    const memoizedContext = useMemo(() => ({ ...context.current, forceRender }), [key]);\n    return (React.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children));\n};\n\nexport { LayoutGroup };\n"],"names":["listItems","SingleNavbar","haslayout","useState","section","setSection","className","map","item","i","onClick","e","layoutId","name","component","id","DeprecatedLayoutGroupContext","createContext","notify","node","isLayoutDirty","willUpdate","nodeGroup","nodes","Set","subscriptions","WeakMap","dirtyAll","forEach","add","set","addEventListener","remove","_a","delete","get","dirty","shouldInheritGroup","inherit","LayoutGroup","children","inheritId","undefined","layoutGroupContext","useContext","LayoutGroupContext","deprecatedLayoutGroupContext","useForceUpdate","forceRender","key","context","useRef","upstreamId","current","shouldInheritId","group","memoizedContext","useMemo","React","value"],"sourceRoot":""}