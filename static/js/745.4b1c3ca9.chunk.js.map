{"version":3,"file":"static/js/745.4b1c3ca9.chunk.js","mappings":"uNAIMA,EAAyB,CAC3BC,OAAQ,CACJC,EAAG,GAEPC,KAAM,CACFD,EAAG,MAIPE,EAAW,CAAC,KAAM,MAAO,SAC7B,SAASC,EAAUC,GACf,OAAOF,EAASG,KAAI,SAACC,GAAD,OAAUF,EAAyBE,CAAnC,GACvB,CAED,IAAMC,EAAY,CACdC,OAAQ,SACRC,WAAY,aACZC,KAAMP,EAAU,QAChBQ,KAAMR,EAAU,QAChBS,KAAMT,EAAU,SAGdU,EAAuB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,qBAAsBC,EAAe,EAAfA,SAClD,OACI,SAACC,EAAA,MAAD,CACIC,UAAU,gBACVC,SAAUpB,EACVqB,QAAQ,OACRC,QAAQ,SACRC,WAAY,CACRC,KAAM,QACNZ,KAAMI,EACNS,SAAU,GARlB,SAWKR,GAGZ,ECxCD,IAOA,EAPmB,CACf,CACIS,KAAM,oBACNC,UDsCO,WACX,OAA4CC,EAAAA,EAAAA,UAAS,UAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACFC,MAAMC,QAAQ5B,EAAUoB,IACxBG,EAAgBvB,EAAUoB,KAE1BG,EAAgB,MAChBE,EAAgB,MAEvB,GAAE,CAACL,KAGA,4BACI,kBAAOS,QAAQ,YAAf,2BACA,mBACIC,GAAG,YACHC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAkBY,EAAEC,OAAOH,MAAlC,EAHd,SAKKI,OAAOC,KAAKpC,GAAWF,KAAI,SAACmB,GACzB,OACI,mBAAmBc,MAAOd,EAA1B,SACKA,GADQA,EAIpB,MAEJK,IACG,yBACKA,EAAaxB,KAAI,SAACuC,GACf,OACI,4BACI,kBACItB,KAAK,QACLe,GAAIO,EACJpB,KAAMG,EACNW,MAAOM,EACPC,QAAS,SAACL,GAAD,OACLR,EAAgBQ,EAAEC,OAAOJ,GADpB,KAIb,kBAAOD,QAASQ,EAAhB,SAAuBA,MAVjBA,EAajB,MAGRb,GACG,SAAClB,EAAD,CAEIC,qBAAsBiB,EAF1B,SAIKA,GAHIA,IAMT,SAAClB,EAAD,CAEIC,qBAAsBa,EAF1B,SAIKA,GAHIA,KAQxB,G","sources":["components/Day8/TransitionDisplay.js","components/Day8/index.js"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst timingFunctionVariants = {\r\n    hidden: {\r\n        x: 0,\r\n    },\r\n    show: {\r\n        x: 100,\r\n    },\r\n};\r\n\r\nlet animName = [\"In\", \"Out\", \"InOut\"];\r\nfunction addPrefix(animTimingFunctionName) {\r\n    return animName.map((anim) => animTimingFunctionName + anim);\r\n}\r\n\r\nconst functions = {\r\n    linear: \"linear\",\r\n    anticipate: \"anticipate\",\r\n    ease: addPrefix(\"ease\"),\r\n    circ: addPrefix(\"circ\"),\r\n    back: addPrefix(\"back\"),\r\n};\r\n\r\nconst StringTimingFunction = ({ timingFunctionString, children }) => {\r\n    return (\r\n        <motion.div\r\n            className=\"transitionBox\"\r\n            variants={timingFunctionVariants}\r\n            animate=\"show\"\r\n            initial=\"hidden\"\r\n            transition={{\r\n                type: \"tween\",\r\n                ease: timingFunctionString,\r\n                duration: 3,\r\n            }}\r\n        >\r\n            {children}\r\n        </motion.div>\r\n    );\r\n};\r\nexport default function TransitionDisplay() {\r\n    const [timingFunction, setTimingFunction] = useState(\"linear\");\r\n    const [subFunctions, setSubFunctions] = useState(null);\r\n    const [selectedSubF, setSelectedSubF] = useState(null);\r\n    useEffect(() => {\r\n        if (Array.isArray(functions[timingFunction])) {\r\n            setSubFunctions(functions[timingFunction]);\r\n        } else {\r\n            setSubFunctions(null);\r\n            setSelectedSubF(null);\r\n        }\r\n    }, [timingFunction]);\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"functions\">類型</label>\r\n            <select\r\n                id=\"functions\"\r\n                value={timingFunction}\r\n                onChange={(e) => setTimingFunction(e.target.value)}\r\n            >\r\n                {Object.keys(functions).map((name) => {\r\n                    return (\r\n                        <option key={name} value={name}>\r\n                            {name}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            {subFunctions && (\r\n                <div>\r\n                    {subFunctions.map((subf) => {\r\n                        return (\r\n                            <div key={subf}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id={subf}\r\n                                    name={timingFunction}\r\n                                    value={subf}\r\n                                    onClick={(e) =>\r\n                                        setSelectedSubF(e.target.id)\r\n                                    }\r\n                                />\r\n                                <label htmlFor={subf}>{subf}</label>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n            {selectedSubF ? (\r\n                <StringTimingFunction\r\n                    key={selectedSubF}\r\n                    timingFunctionString={selectedSubF}\r\n                >\r\n                    {selectedSubF}\r\n                </StringTimingFunction>\r\n            ) : (\r\n                <StringTimingFunction\r\n                    key={timingFunction}\r\n                    timingFunctionString={timingFunction}\r\n                >\r\n                    {timingFunction}\r\n                </StringTimingFunction>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import TransitionDisplay from \"./TransitionDisplay\";\r\n\r\nconst animations = [\r\n    {\r\n        name: \"transitionDisplay\",\r\n        component: TransitionDisplay,\r\n    },\r\n];\r\n\r\nexport default animations;\r\n"],"names":["timingFunctionVariants","hidden","x","show","animName","addPrefix","animTimingFunctionName","map","anim","functions","linear","anticipate","ease","circ","back","StringTimingFunction","timingFunctionString","children","motion","className","variants","animate","initial","transition","type","duration","name","component","useState","timingFunction","setTimingFunction","subFunctions","setSubFunctions","selectedSubF","setSelectedSubF","useEffect","Array","isArray","htmlFor","id","value","onChange","e","target","Object","keys","subf","onClick"],"sourceRoot":""}